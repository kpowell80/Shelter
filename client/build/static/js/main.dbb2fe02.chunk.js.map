{"version":3,"sources":["components/DashBoard.js","components/PetForm.js","components/DetailPet.js","components/EditPet.js","App.js","serviceWorker.js","index.js"],"names":["DashBoard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","axios","get","then","res","setState","pets","data","catch","err","console","log","state","react_default","a","createElement","className","scope","map","pet","key","_id","name","type","react_router_dom","to","Component","PetForm","changeType","e","objectSpread","target","value","changeName","changeDescription","description","changeSkill","skill","create","preventDefault","post","errors","history","push","likes","onSubmit","onChange","message","DetailPet","concat","match","params","delete","incrementMe","document","getElementById","disabled","newCount","count","put","onClick","class","id","bind","EditPet","update","App","react_router","exact","path","component","Dashboard","Boolean","window","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dbb2fe02.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n\n\n\n\nclass DashBoard extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            pets: []\n        }\n    }\n    componentDidMount = () =>{\n        axios.get(\"/pets\")\n            .then(res =>{\n                this.setState({pets: res.data.pets}, ()=>{\n                    \n                });\n            }).catch(err =>{\n                console.log(err);\n            });\n    }\n\n    render(){\n        return(\n       \n            <fieldset>\n                <legend>These pets are looking for a home!</legend>\n                \n                <table className=\"table\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Type</th>\n                            <th scope=\"col\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.pets.map(pet =>\n                                <tr key={pet._id}>\n                                    <td>{pet.name}</td>\n                                    <td>{pet.type}</td>\n\n                                    <td>\n                                        <Link\n                                            to={'/pet/' + pet._id + \"/edit\"}>\n                                            <button className=\"btn btn-info\">Edit</button>\n                                        </Link>\n                                        <Link\n                                            to={'/pet/' + pet._id + \"/detail\"}>\n                                            <button className=\"btn btn-secondary\">Detail</button>\n                                        </Link>\n                                    </td>\n                                </tr>\n                                )\n                            }\n                    </tbody>\n                </table>\n            </fieldset>\n  \n            );\n        }\n     \n    }\n          \nexport default DashBoard;","import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass PetForm extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            pet:{\n                type: \"\",\n                name: \"\",\n                description: \"\",\n                skill: \"\",\n                likes:0\n               \n\n            },\n            errors: {}\n        }\n    }\n\n  \n\n    changeType= (e)=> {\n        this.setState({pet: {...this.state.pet, type:e.target.value}});\n    }\n    changeName= (e)=> {\n        this.setState({pet: {...this.state.pet, name:e.target.value}});\n    }\n    changeDescription= (e)=> {\n        this.setState({pet: {...this.state.pet, description:e.target.value}});\n    }\n    changeSkill= (e)=> {\n        this.setState({pet: {...this.state.pet, skill:e.target.value}});\n    }\n\n    create=(e)=> {\n        e.preventDefault();\n        axios.post('/pets', this.state.pet)\n            .then(res =>{\n                if(res.data.errors){\n                    this.setState({errors: res.data.errors.errors});\n                    console.log(this.state);\n                }else{\n                    this.props.history.push(\"/\");\n                }\n            }).catch(err => { \n                console.log(err);\n\n            });\n    }\n    render(){\n        return(\n       \n            <fieldset>\n                <legend>Know of a pet needing a home??!!! </legend>\n                <form onSubmit={this.create}>\n                <p>\n                    Pet name: &nbsp;\n                    <input type=\"text\" onChange={this.changeName }/>\n                    {\n                        (this.state.errors.name) ?\n                        <span className=\"error\">&nbsp;{this.state.errors.name.message}</span> :\n                        <span></span>\n                    }\n                </p>\n                <p>\n                    Pet type: &nbsp;\n                    <input type=\"text\" onChange={this.changeType}/>\n                    {\n                        (this.state.errors.type) ?\n                        <span className=\"error\">&nbsp;{this.state.errors.type.message}</span> :\n                        <span></span>\n                    }\n                </p>\n                <p>\n                    Description: &nbsp;\n                    <input type=\"text\" onChange={this.changeDescription}/>\n                    {   \n                        (this.state.errors.description) ?\n                        <span className=\"error\">&nbsp;{this.state.errors.description.message}</span> :\n                        <span></span>\n                    }\n                </p>\n                \n                    Skills: &nbsp;\n\n                        <p>\n                            Skill:\n                            <input type=\"text\" onChange={this.changeSkill}/>\n                        </p>\n                       \n               \n               \n               \n                    <button type=\"submit\" className=\"btn btn-success\">Add pet</button>\n                    <button type=\"submit\" className=\"btn btn-success\">Cancel</button>\n                </form>\n\n\n            </fieldset>\n         \n          \n    );\n}\n}\nexport default PetForm;","import React, { Component } from 'react';\nimport axios from 'axios';\n\n//  {Router, Route} from 'react-router';\n\nclass DetailPet extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            count:0,\n            // updated=true\n           \n            pet: {\n                type: \"\",\n                name:\"\",\n                description: \"\",\n                skill: \"\",\n                likes: 0,\n            },\n            errors: {}\n        }\n    }\n    \n\n    componentDidMount = () => {\n        axios.get(`/pets/${this.props.match.params._id}`)\n            .then(res => {\n                console.log(res)\n                this.setState({pet: res.data.pet});\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n    delete = (e) => {\n        axios.delete(`/pets/${this.props.match.params._id}`)\n            .then(res => {\n                this.props.history.push('/');\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n\n  incrementMe=(e)=>{\n    console.log(e)\n    document.getElementById(\"likes\").disabled = true;\n    let newCount = this.state.count +1\n        e.likes ++\n      this.setState({\n          count:newCount\n      })\n     \n        axios.put(`/pets/${this.props.match.params._id}`, e)\n      console.log(\"like the animal\")\n  \n}\n\n    render() {\n        return (\n            \n           <div>\n                <h3>Pet name: {this.state.pet.name}</h3>\n                <h4>Pet type: {this.state.pet.type}</h4>\n                <h4>Description: {this.state.pet.description}</h4>\n                <h4>Skill:{this.state.pet.skill} </h4>\n                <h4>Likes:{this.state.pet.likes}</h4>\n                <hr />\n\n               <p><button onClick={this.delete} class=\"btn btn-danger\">ADOPT!</button></p>\n                <p><button id=\"likes\" onClick={this.incrementMe.bind(this, this.state.pet)} >Likes</button></p>\n                \n           \n               \n            </div>\n\n                \n            \n        )\n    }\n}\n\nexport default DetailPet;\n","import React, {Component} from 'react';\nimport axios from 'axios';\n\n\nclass EditPet extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            pet:{\n                type: \"\",\n                name: \"\",\n                description: \"\",\n                skill:\"\",\n\n            },\n            errors: {}\n        }\n    }\n    componentDidMount = () => {\n        axios.get(`/pets/${this.props.match.params._id}`)\n            .then(res => {\n                this.setState({pet: res.data.pet});\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n\n    changeType= (e)=> {\n        this.setState({pet: {...this.state.pet, type:e.target.value}});\n    }\n    changeName= (e)=> {\n        this.setState({pet: {...this.state.pet, name:e.target.value}});\n    }\n    changeDescription= (e)=> {\n        this.setState({pet: {...this.state.pet, description:e.target.value}});\n    }\n    changeSkill= (e)=> {\n        this.setState({pet: {...this.state.pet, skill:e.target.value}});\n    }\n   \n    update=(e)=> {\n        e.preventDefault();\n        console.log(this.state);\n        axios.put(`/pets/${this.props.match.params._id}`, this.state.pet)\n            .then(res => {\n                if(res.data.errors){\n                    this.setState({errors: res.data.errors.errors});\n                } else {\n                    this.props.history.push('/');\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n    delete = (e) => {\n        axios.delete(`/pets/${this.props.match.params._id}`)\n            .then(res => {\n                this.props.history.push('/');\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n    render(){\n\n        \n        return(\n       \n            <fieldset>\n                <legend>Edit what we know about this pet... </legend>\n                <form onSubmit={this.update}>\n                <p>\n                    Pet name: &nbsp;\n                    <input type=\"text\" onChange={this.changeName} value={this.state.pet.name}/>\n                    {\n                        (this.state.errors.name) ?\n                        <span className=\"error\">&nbsp;{this.state.errors.name.message}</span> :\n                        <span></span>\n                    }\n                </p>\n                <p>\n                    Pet type: &nbsp;\n                    <input type=\"text\" onChange={this.changeType}value={this.state.pet.type}/>\n                    {\n                        (this.state.errors.type) ?\n                        <span className=\"error\">&nbsp;{this.state.errors.type.message}</span> :\n                        <span></span>\n                    }\n                </p>\n                <p>\n                    Description: &nbsp;\n                    <input type=\"text\" onChange={this.changeDescription}value={this.state.pet.description}/>\n                    {\n                        (this.state.errors.description) ?\n                        <span className=\"error\">&nbsp;{this.state.errors.description.message}</span> :\n                        <span></span>\n                    }\n                </p>\n                <h5>Skill: &nbsp;\n                    <input type=\"text\" onChange={this.changeSkill}value={this.state.pet.skill}/>\n                   \n                </h5>\n             \n                                      \n                   \n                   <button type=\"submit\" className=\"btn btn-success\">Details</button>\n                        <button className=\"btn btn-success\">Cancel</button>\n                       \n                </form>\n\n\n            </fieldset>\n         \n          \n    );\n}\n}\nexport default EditPet;","import React, { Component } from 'react';\nimport './App.css';\nimport \"react-router\";\nimport {Link, BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Dashboard from './components/DashBoard';\nimport PetForm from './components/PetForm';\nimport DetailPet from './components/DetailPet';\nimport EditPet from './components/EditPet';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n      <BrowserRouter>\n       <ul>\n          <li ><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/pet/new\">Add a new pet to the shelter</Link></li>\n        </ul>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route exact path=\"/pet/new\" component={PetForm} />\n          <Route path=\"/pet/:_id/edit\" component={EditPet} />\n          <Route path=\"/pet/:_id/detail\" component={DetailPet} />\n        </Switch>\n      \n      \n      </BrowserRouter>\n       \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}